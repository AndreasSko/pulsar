## Default job manager is queued and runs 1 concurrent job.
[manager:_default_]
type = queued_python
max_concurrent_jobs=1

## Create a named queued (example) and run as many concurrent jobs as
## server has cores.
#[manager:example]
#type=queued_python
#max_concurrent_jobs=*

## DRMAA backed manager.
## Be sure drmaa Python module install and DRMAA_LIBRARY_PATH points
## to a valid DRMAA shared library file.
#[manager:_default_]
#type=queued_drmaa

## Condor backed manager.
#[manager:_default_]
#type=queued_condor
## Optionally, additional condor submission parameters can be 
## set as follows:
#submit_universe=vanilla
#submit_request_memory=32
#submit_requirements=OpSys == "LINUX" && Arch =="INTEL"
#submit_rank=Memory >= 64
## These would set universe, request_memory, requirements, and rank
## in the condor submission file to the specified values. For
## more information on condor submission files see the following link:
## http://research.cs.wisc.edu/htcondor/quick-start.html.

## CLI Manager Locally
## Manage jobs via command-line execution of qsub, qdel, stat.
#[manager:_default_]
#type=queued_cli
#job_plugin=Torque

## CLI Manager via Remote Shell
## Manage jobs via qsub, qdel, qstat on remote host `queuemanager` as
## Unix user `queueuser`.
#[manager:_default_]
#type=queued_cli
#job_plugin=Torque
#shell_plugin=SecureShell
#shell_hostname=queuemanager
#shell_username=queueuser


## NOT YET IMPLEMENTED. PBS backed manager.
#[manager:_default_]
#type=queued_pbs

## Disable server-side LWR queuing (suitable for older style LWR use
## when queues were maintained in Galaxy.) Deprecated, will be removed
## at some point soon.
#[manager:_default_]
#type=unqueued
